#!/bin/bash
software_dir=/shared/workspace/software
reference_dir=$software_dir/references
pipline_dir=/shared/workspace/cirrus-ngs/src/cirrus_ngs/server/Pipelines
tool_dir=$software_dir

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#
#               REFERENCES                #
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#

#human hg19
export hg19_fasta="$reference_dir/Hsapiens/hg19/sequence/ucsc.hg19.fasta"
export hg19_chromosome_list="chrM chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22 chrX chrY" 
export hg19_fai="$reference_dir/Hsapiens/hg19/sequence/ucsc.hg19.fasta.fai"
export hg19_gtf="$reference_dir/Hsapiens/hg19/annotations/gencode.v19.annotation.gtf"
export hg19_bwa_index="$reference_dir/Hsapiens/hg19/indices/bwa/ucsc.hg19.fasta"
export hg19_bowtie_index="$reference_dir/Hsapiens/hg19/indices/bowtie/genome"
export hg19_kallisto_index="$reference_dir/Hsapiens/hg19/indices/kallisto/kallisto_index"
export hg19_STAR_index="$reference_dir/Hsapiens/hg19/indices/RSEM/GRCh37/"
export hg19_rsem_index="$reference_dir/Hsapiens/hg19/indices/RSEM/GRCh37/human"
export hg19_dbsnp="$reference_dir/Hsapiens/hg19/variation/dbsnp_138.hg19.vcf.gz"
export hg19_mills="$reference_dir/Hsapiens/hg19/variation/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.gz"
export hg19_hapmap="$reference_dir/Hsapiens/hg19/variation/hapmap_3.3.hg19.sites.vcf.gz"
export hg19_omni="$reference_dir/Hsapiens/hg19/variation/1000G_omni2.5.hg19.sites.vcf.gz"
export hg19_G1000_snps="$reference_dir/Hsapiens/hg19/variation/1000G_phase1.snps.high_confidence.hg19.sites.vcf.gz"
export hg19_G1000_indels="$reference_dir/Hsapiens/hg19/variation/1000G_phase1.indels.hg19.sites.vcf.gz"
export hg19_cosmic="$reference_dir/Hsapiens/hg19/variation/cosmic_hg19.vcf.gz"
#for RNA Editing
export hg19_AluRegions="$reference_dir/Hsapiens/hg19/variation/Alu.hg19.bed"
export hg19_rnaEditDB="$reference_dir/Hsapiens/hg19/variation/rnaEditDB.txt"
export hg19_snpir_gene_annotation="$reference_dir/Hsapiens/hg19/variation/SNPiR_annotation.hg19"
export hg19_RepeatMasker="$reference_dir/Hsapiens/hg19/variation/RepeatMasker.hg19.bed"
#for SV
export exclude_bed="$reference_dir/Hsapiens/hg19/variation/LCR-hs37d5.bed"
#for multiQC RSeQC
export hg19_RefSeq_bed="$software_dir/RSeQC/resources/hg19_RefSeq.bed"
export hg19_rRNA_bed="$software_dir/RSeQC/resources/hg19_rRNA.bed"
export hg19_HouseKeepingGenes_bed="$software_dir/RSeQC/resources/hg19.HouseKeepingGenes.bed"

#human hg38
export hg38_fasta="$reference_dir/Hsapiens/hg38/sequence/GRCh38.p12.genome.fa"
export hg38_chromosome_list="chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22 chrX chrY chrM"
export hg38_fai="$reference_dir/Hsapiens/hg38/sequence/GRCh38.p12.genome.fa.fai"
export hg38_bwa_index="$reference_dir/Hsapiens/hg38/indices/bwa/GRCh38.p2.genome.fa"
export hg38_STAR_index="$reference_dir/Hsapiens/hg38/indices/RSEM"
export hg38_gtf="$reference_dir/Hsapiens/hg38/annotations/gencode.v29.annotation.gtf"
export hg38_rsem_index="$reference_dir/Hsapiens/hg38/indices/RSEM/RSEM"
export hg38_dbsnp="$reference_dir/Hsapiens/hg38/variation/dbsnp_146.hg38.vcf.gz"
export hg38_mills="$reference_dir/Hsapiens/hg38/variation/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz"
export hg38_hapmap="$reference_dir/Hsapiens/hg38/variation/hapmap_3.3.hg38.vcf.gz"
export hg38_omni="$reference_dir/Hsapiens/hg38/variation/1000G_omni2.5.hg38.vcf.gz"
export hg38_G1000_snps="$reference_dir/Hsapiens/hg38/variation/1000G_phase1.snps.high_confidence.hg38.vcf.gz"
#for multiQC RSeQC
export hg38_RefSeq_bed="$software_dir/RSeQC/resources/hg38_RefSeq.bed"
export hg38_rRNA_bed="$software_dir/RSeQC/resources/hg38_rRNA.bed"
export hg38_HouseKeepingGenes_bed="$software_dir/RSeQC/resources/hg38.HouseKeepingGenes.bed"

#human hairpin
export hairpin_human_fasta="$reference_dir/Hsapiens/hairpin/sequence/hairpin_human_v22.1.fa"
export hairpin_human_bowtie2_indexes="$reference_dir/Hsapiens/hairpin/indices/bowtie2/"
export hairpin_human_bowtie2_index="hairpin_human_v22.1"

#mouse hairpin
export hairpin_mouse_fasta="$reference_dir/Mmusculus/hairpin/sequence/hairpin_musculus.fa"
export hairpin_mouse_bowtie2_indexes="$reference_dir/Mmusculus/hairpin/indices/bowtie2/"
export hairpin_mouse_bowtie2_index="hairpin_musculus"

#mouse GRCm38
export GRCm38_fasta="$reference_dir/Mmusculus/GRCm38/sequence/GRCm38_68.fa"
export GRCm38_chromosome_list="1 10 11 12 13 14 15 16 17 18 19 2 3 4 5 6 7 8 9 MT X Y"
export GRCm38_fai="$reference_dir/Mmusculus/GRCm38/sequence/GRCm38_68.fa.fai"
export GRCm38_gtf="$reference_dir/Mmusculus/GRCm38/annotations/Mus_musculus.GRCm38.68.gtf"
export GRCm38_bwa_index="$reference_dir/Mmusculus/GRCm38/indices/bwa/GRCm38_68.fa"
export GRCm38_G1000_indels="$reference_dir/Mmusculus/GRCm38/variation/mgp.v5.merged.indels.dbSNP142.normed.vcf.gz"
export GRCm38_dbsnp="$reference_dir/Mmusculus/GRCm38/variation/mgp.v5.merged.snps_all.dbSNP142.vcf.gz"
export GRCm38_rsem_index="$reference_dir/Mmusculus/GRCm38/indices/STAR/mouse"

#mouse M19
export M19_fasta="$reference_dir/Mmusculus/M19/sequence/GRCm38.p6.genome.fa"
export M19_chromosome_list="chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY chrM"
export M19_fai="$reference_dir/Mmusculus/M19/sequence/GRCm38.p6.genome.fa.fai"
export M19_gtf="$reference_dir/Mmusculus/M19/annotations/gencode.vM19.annotation.gtf"
export M19_STAR_index="$reference_dir/Mmusculus/M19/indices/STAR/"
export M19_rsem_index="$reference_dir/Mmusculus/M19/indices/STAR/mouse"

#mouse mm10
export mm10_fasta="$reference_dir/Mmusculus/mm10/sequence/GRCm38.p6.genome.fa"
export mm10_chromosome_list="chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chrX chrY chrM"
export mm10_fai="$reference_dir/Mmusculus/mm10/sequence/GRCm38.p6.genome.fa.fai"
export mm10_gtf="$reference_dir/Mmusculus/mm10/annotations/gencode.vM19.annotation.gtf"
export mm10_bowtie_index="$reference_dir/Mmusculus/mm10/indices/bowtie/genome"
export mm10_STAR_index="$reference_dir/Mmusculus/mm10/indices/STAR/"
export mm10_rsem_index="$reference_dir/Mmusculus/mm10/indices/STAR/mouse"

#rat Rnor6
export rnor6_fasta="$reference_dir/Rat/Rnor6/sequence/Rnor_6.0_94.fa"
export rnor6_chromosome_list="1 10 11 12 13 14 15 16 17 18 19 2 3 4 5 6 7 8 9 MT X Y"
export rnor6_fai="$reference_dir/Rat/Rnor6/sequence/Rnor_6.0_94.fa.fai"
export rnor6_gtf="$reference_dir/Rat/Rnor6/annotations/Rnor_6.0.94.chr.gtf"
export rnor6_STAR_index="$reference_dir/Rat/Rnor6/indices/STAR/"
export rnor6_rsem_index="$reference_dir/Rat/Rnor6/indices/STAR/rat"

#Caenorhabditis elegans
export caenorhabditis_fasta="$reference_dir/caenorhabditis/WBcel235/sequence/Caenorhabditis_elegans.WBcel235.dna.toplevel.fa"
export caenorhabditis_chromosome_list="I II III IV V X MtDNA"
export caenorhabditis_fai="$reference_dir/caenorhabditis/WBcel235/sequence/Caenorhabditis_elegans.WBcel235.dna.toplevel.fa.fai"
export caenorhabditis_gtf="$reference_dir/caenorhabditis/WBcel235/annotations/Caenorhabditis_elegans.WBcel235.96.gtf"
export caenorhabditis_STAR_index="$reference_dir/caenorhabditis/WBcel235/indices/STAR/"
export caenorhabditis_rsem_index="$reference_dir/caenorhabditis/WBcel235/indices/STAR/caenorhabditis"

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#
#             PATH VARIABLES              #
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#
export PATH="$software_dir/anaconda3/bin:$tool_dir/homer/4.8.3/bin:$PATH"
#for homer dependencies
export PATH=$PATH:/shared/workspace/software/blat/36x1
export PATH=$PATH:/shared/workspace/software/weblogo/2.8
export PATH=$PATH:/shared/workspace/software/ghostscript/9.19
export PATH=$PATH:/shared/workspace/software/samtools/1.1
export PERL5LIB="$tool_dir/vcftools/0.1.12b/perl/:$tool_dir/perl-Env/1.04/lib/"
export R_LIBS="/shared/workspace/software/R-packages"


#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#
#                 TOOLS                   #
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#

#paths to interepreters/vms
export java="$tool_dir/java/jre1.8.0_144/bin/java"
export python3="$tool_dir/anaconda3/bin/python"
export python2="$tool_dir/anaconda2/bin/python"
export python="$tool_dir/anaconda2/bin/python"

#common to multiple pipelines
export fastqc="$tool_dir/FastQC/0.11.3/fastqc"
export trimmomatic="$tool_dir/Trimmomatic/0.36/trimmomatic-0.36.jar"
export multiqc="$software_dir/anaconda3/bin/multiqc"
export samtools="$tool_dir/samtools/1.9/samtools"
export picard_mark_duplicates="$tool_dir/picard/1.96/MarkDuplicates.jar"

#DNASeq
export bwa="$tool_dir/bwa/0.7.12-r1039/bwa"
export gatk="$tool_dir/gatk/4.1.0.0/gatk-package-4.1.0.0-local.jar"
export manta="$tool_dir/manta/manta-0.29.3.centos5_x86_64/bin/configManta.py"
export samblaster="$tool_dir/samblaster/0.1.21/samblaster"
export sambamba="$tool_dir/sambamba/0.4.7/bin/sambamba"
export bedtools="$tool_dir/bedtools2/2.19.1/bin/bedtools"
export bgzip="$tool_dir/tabix/0.2.6/bgzip"
export tabix="$tool_dir/tabix/0.2.6/tabix"
export concat_vcf="$tool_dir/vcftools/0.1.12b/bin/vcf-concat"
export sort_vcf="$tool_dir/vcftools/0.1.12b/bin/vcf-sort"
export vcf_sort="$pipline_dir/util/SortVCF.py"
export lumpy_extract="$software_dir/anaconda2/share/lumpy-sv-0.2.14a-2/scripts/extractSplitReads_BwaMem"
export lumpyexpress="$software_dir/anaconda2/bin/lumpyexpress"
export sv2="$software_dir/anaconda2/bin/sv2"

#ChiPSeq
export bowtie="$tool_dir/bowtie/1.0.1/bowtie"
export make_tag_directory="$tool_dir/homer/4.8.3/bin/makeTagDirectory"
export make_UCSC_file="$tool_dir/homer/4.8.3/bin/makeUCSCfile"
export find_peaks="$tool_dir/homer/4.8.3/bin/findPeaks"
export annotate_peaks="$tool_dir/homer/4.8.3/bin/annotatePeaks.pl"
export pos2bed="$tool_dir/homer/4.8.3/bin/pos2bed.pl"
export find_motifs_genome="$tool_dir/homer/4.8.3/bin/findMotifsGenome.pl"

#miRNA
export cutadapt="$software_dir/anaconda3/bin/cutadapt"
export bowtie2="$tool_dir/bowtie2/2.3.3-linux/bowtie2"
export miRNA_count="$pipline_dir/util/miRNA_MergeCount.py"

#RNASeq Kallisto
export kallisto="$tool_dir/kallisto/0.43.1"
export kallisto_count="$pipline_dir/util/KallistoCount.py"
export entrez_gene="$software_dir/kallisto_util/count_reads/gencode.v23.metadata.EntrezGene"
export gene_description="$software_dir/kallisto_util/count_reads/Hsa_gene_symbol_description.txt"
export RSEM_count_parser="$pipline_dir/util/RSEM_count_parser.py"

#RNASeq STAR
export STAR="$tool_dir/STAR/2.5.3a/bin/Linux_x86_64/STAR"
export star_path="$tool_dir/STAR/2.5.3a/bin/Linux_x86_64"

#RNASeq STAR: GATK
export picard_add_or_replace_read_groups="$tool_dir/picard/1.96/AddOrReplaceReadGroups.jar"
export picard_sort_sam="$tool_dir/picard/1.96/SortSam.jar"
export SNPiR="$tool_dir/snpir"
export intersectBed="$tool_dir/bedtools2/2.19.1/bin/intersectBed"
export bcftools="$tool_dir/bcftools/1.9/bcftools"

#RNASeq STAR: HTseq-count
export htseq_count="$software_dir/anaconda3/bin/htseq-count"

#RNASeq STAR: RSEM
export rsem="$tool_dir/RSEM/1.3.0/rsem-calculate-expression"
export rsem_tbam2gbam="$tool_dir/RSEM/1.3.0/rsem-tbam2gbam"
export RSEM_count_parser="$pipline_dir/util/RSEM_count_parser.py"
export RSEM_gene_parser="$pipline_dir/util/RSEM_gene_parser.py"
export RSEM_isoform_parser="$pipline_dir/util/RSEM_isoform_parser.py"
export SAMStatsReplace="$pipline_dir/util/SAMStatsReplace.py"


#MultiQC RSeQC
export rseqc_split_bam="$software_dir/anaconda2/bin/split_bam.py"
export rseqc_geneBody_coverage="$software_dir/anaconda2/bin/geneBody_coverage.py"
export rseqc_read_distribution="$software_dir/anaconda2/bin/read_distribution.py"

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#
#              ERROR CHECK                #
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#

check_outputs_exist()
{
    for i in "$@"
    do
        if [ ! -e "$i" ]
        then
            echo "#### $i output is missing ####"
            return 1
        fi
    done

    echo "#### All outputs exist ####"
    return 0
}

check_exit_status()
{
    curr_command=$1
    curr_script=$2
    status_file=$3

    for i in `seq 3`
    do
        temp_output=`eval $curr_command 2>&1`
        if [ $? -eq 0 ]
        then
            echo "$temp_output"
            echo "$curr_script"_"passed" >> $status_file
            return
        fi
    done

    echo "$temp_output"
    echo "$curr_script"_"failed" >> $status_file
    exit
}

check_step_already_done()
{
    curr_script=$1
    status_file=$2

    if [ `grep "$curr_script"_"passed" $status_file | wc -l` -ne 0 ] && \
        [ `grep "$curr_script"_"failed" $status_file | wc -l` -eq 0 ]
    then
        echo "Already finished running $curr_script"
        exit
    else
        sed -i "/${curr_script}_.*/d" $status_file
    fi
}

export -f check_exit_status
export -f check_step_already_done
export -f check_outputs_exist
